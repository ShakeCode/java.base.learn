package com.java.learn.stasticT;

/**
 * 成员变量和局部变量的区别
 * 1、成员变量是独立于方法外的变量，局部变量是类的方法中的变量
 * 1）、成员变量：包括实例变量和类变量，用static修饰的是类变量，不用static修饰的是实例变量，所有类的成员变量可以通过this来引用。
 * 2）、局部变量：包括形参，方法局部变量，代码块局部变量，存在于方法的参数列表和方法定义中以及代码块中。
 * 2、成员变量可以被public，protect，private，static等修饰符修饰，而局部变量不能被控制修饰符及 static修饰；两者都可以定义成final型。
 * 3、成员变量存储在堆，局部变量存储在栈。局部变量的作用域仅限于定义它的方法，在该方法的外部无法访问它。成员变量的作用域在整个类内部都是可见的，所有成员方法都可以使用它。如果访问权限允许，还可以在类的外部使用成员变量。
 * 4、局部变量的生存周期与方法的执行期相同。当方法执行到定义局部变量的语句时，局部变量被创建；执行到它所在的作用域的最后一条语句时，局部变量被销毁。类的成员变量，如果是实例成员变量，它和对象的生存期相同。而静态成员变量的生存期是整个程序运行期。
 * 5、成员变量在累加载或实例被创建时，系统自动分配内存空间，并在分配空间后自动为成员变量指定初始化值，初始化值为默认值，基本类型的默认值为0，复合类型的默认值为null。（被final修饰且没有static的必须显式赋值），局部变量在定义后必须经过显式初始化后才能使用，系统不会为局部变量执行初始化。
 * 6、局部变量可以和成员变量 同名，且在使用时，局部变量具有更高的优先级，直接使用同名访问，访问的是局部变量，如需要访问成员变量可以用this.变量名访问
 * 本例中i为成员变量，有默认的初始值，如果定义在方法内部，就没有初始值
 */
public class StatisticTT {

    /*
    static关键字可以修饰变量，方法，静态代码块。
    静态变量:
    由static修饰的变量称为静态变量
    静态变量属于类，而不属于某个对象 实例
    静态变量它的副本只有一个(静态变量在类中只加载一)
    静态方法：
    在静态方法中只能调用静态变量和静态方法
    在非静态方法中，可以调用静态方法或者变量。
    在静态方法中不能使用this和super关键字。
    静态代码块
    作用:用来给静态成员变量初始化
    **/


    static int i;

    public static void main(String[] args) {
        System.out.println(i); // 0
        System.out.println(StatisticTT.i); // 0
    }
}
