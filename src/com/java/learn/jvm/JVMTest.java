package com.java.learn.jvm;

/**
 * JVM 内存可简单分为三个区：
 *
 * 1、堆区（heap）：用于存放所有对象，是线程共享的（注：数组也属于对象!!!）
 *
 * 2、栈区（stack）：用于存放基本数据类型的数据和对象的引用，是线程私有的（分为：虚拟机栈和本地方法栈），执行方法前入栈帧，之后弹出栈，释放内存
 * stackoverflow 栈溢出 方法存在循环调用
 *
 * 3、方法区（method）：用于存放类信息、常量、静态变量、编译后的字节码等，是线程共享的（也被称为非堆，即 None-Heap）
 *
 * Java 的垃圾回收器（GC）主要针对堆区 ， 栈区和方法区不是
 */


/**
 * 垃圾回收主要针对的是堆区的回收，因为栈区的内存是随着线程而释放的。堆区分为三个区：1、年轻代（Young Generation）、2、年老代（Old Generation）、3、永久代（Permanent Generation，也就是方法区）。
 *
 *  年轻代：对象被创建时（new）的对象通常被放在Young（除了一些占据内存比较大的对象）,经过一定的Minor GC（针对年轻代的内存回收）还活着的对象会被移动到年老代（一些具体的移动细节省略）。
 *
 * 年老代：就是上述年轻代移动过来的和一些比较大的对象。Minor GC(FullGC)是针对年老代的回收
 *
 * 永久代：存储的是final常量，static变量，常量池。
 */
public class JVMTest {
}
